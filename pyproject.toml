[project]
name = "project-name"
version = "0.0.1"
description = "project-name"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "Django>=5.0",
    "celery[redis]>=5.3.6",
    "redis>=5.1.1",
    "djangorestframework>=3.15.2",
    "django-extensions>=3.2.3",
    "drf-spectacular>=0.27.2",
    "whitenoise[brotli]>=6.8.2",
    "gunicorn>=23.0.0",
    "psycopg[binary]>=3.2.3",
    "dj-database-url>=2.2.0",
    "django-ratelimit>=4.1.0",
    "ipython>=8.29.0",
    "django-cors-headers>=4.5.0",
    "watchdog[watchmedo]>=4.0.2",
    "python-decouple>=3.8",
    "django-celery-beat>=2.7.0",
    "django-defender>=0.9.8",
    "pytz>=2025.1",
    "Brotli>=1.1.0",
    "sentry-sdk>=2.19.2",
    "django-guid>=3.5.0",
    "django-log-request-id>=2.1.0",
    "django-js-reverse>=0.10.2",
    "django-import-export>=4.3.3",
    "django-model-utils>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "tblib>=3.0.0",
    "model-bakery>=1.21.1",
    "django-stubs[compatible-mypy]>=5.1.1",
    "djangorestframework-stubs[compatible-mypy]>=3.15.1",
    "mypy>=1.13.0",
    "ipdb>=0.13.13",
    "pre-commit>=4.0.1",
    "coverage[toml]>=7.6.9",
    "django-debug-toolbar>=4.4.6",
    "Werkzeug>=3.1.3",
    "ruff>=0.1.8",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "virtualenvs",
]
line-length = 100
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-builtins
    "A",
    # flake8-django
    "DJ",
    # isort
    "I",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # Ruff-specific rules
    "RUF"
]
ignore = [
  # Disable eradicate (commented code removal)
  "ERA001",
  # Disable Conflicting lint rules,
  # see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "W191",
  "E501",
  "E111",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
  # Disable unused `noqa` directive
  "RUF100",
]
# Allow unused variables when underscore-prefixed:
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]
lines-after-imports = 2

[tool.ruff.lint.isort.sections]
# Group all Django imports into a separate section.
"django" = ["django"]

[tool.ruff.lint.per-file-ignores]
# Ignore "E402", "F403", "F405" (import violations) in __init__.py files.
# Ignore "S" (flake8-bandit) and "N802" (function name should be lowercase) in tests and docs.
# Ignore "RUF" (Ruff-specific rules) and "I" (isort) in migrations.
"__init__.py" = ["E402", "F403", "F405"]
"**/{tests,docs}/*" = ["E402", "F403", "F405", "S", "N802"]
"backend/common/utils/tests.py" = ["S105", "N802"]
"**/migrations/*" = ["RUF", "I"]
"backend/vite_loader/templatetags/vite_loader_tags.py" = ["S308"]
"backend/project_name/settings/*" = ["F403", "F405", "S105"]

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "manage.py",
    "backend/*/settings/*",
    "backend/*/wsgi.py",
    "backend/*/celery.py",
]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
python_version = "3.12"
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "project_name.settings.local_base"